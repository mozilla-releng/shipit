[project]
name = "shipit-api"
version = "1.0.0"
description = ""
requires-python = ">=3.12"
dependencies = [
    # Required by both public and admin apps
    "connexion[swagger-ui]<3.0",
    "dockerflow",
    "flask",
    "flask_cors",
    "flask_migrate",
    "flask_talisman",
    "mozilla-version~=4.0",
    "python-decouple",
    "sentry-sdk[flask]",
    "slugid",
    "sqlalchemy",
    # deployment
    "gunicorn",
    "psycopg2",

    # Required only by the admin app
    "aioamqp",
    "aiohttp[speedup]",
    "arrow",
    "backoff",
    # to support signals in Flask
    "blinker",
    "deepmerge",
    "flask_login",
    "flask_oidc",
    "json-e",
    "kombu",
    "mohawk",
    "mypy",
    "mypy_extensions",
    "pyyaml",
    "taskcluster",
]

[tool.uv]
dev-dependencies = [
    "aioresponses",
    "black",
    "check-manifest",
    "coverage",
    "dpath",
    "flake8",
    "isort",
    "openapi-spec-validator",
    "oyaml",
    "pytest",
    "pytest-asyncio",
    "pytest-cov",
    "pytest-mock",
    "pytest-xdist",
    "responses",
    "tox",
    "tox-uv",
]

[project.scripts]
shipit_upload_product_details = "shipit_api.admin.cli:download_product_details"
shipit_rebuild_product_details = "shipit_api.admin.cli:rebuild_product_details"
shipit_import = "shipit_api.admin.cli:shipit_import"
shipit_trigger_product_details = "shipit_api.admin.cli:trigger_product_details"

[dependency-groups]
ccov-upload = ["requests"]
dev = ["flask-shell-ipython~=0.5.1"]

[tool.hatch.build.targets.wheel]
packages = ["src/backend_common", "src/cli_common", "src/shipit_api"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"
