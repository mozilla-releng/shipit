[tool.black]
line-length = 160
target-version = ["py39"]
include = '\.(wsgi|pyi?)$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | \.cache
  | \.cache_py3
  | _build
  | buck-out
  | build
  | dist
  | ui
)/
'''

[tool.isort]
line_length=160
multi_line_output=3
include_trailing_comma=true
force_grid_wrap=0
use_parentheses=true

[tool.coverage.run]
omit = ["api/tests/*"]

[tool.poetry]
name = "shipit-api"
version = "1.0.0"
description = ""
authors = ["Release Engineering <releng@mozilla.com>"]
license = "MPL2"
packages = [
    {include = "backend_common", from = "src"},
    {include = "cli_common", from = "src"},
    {include = "shipit_api", from = "src"},
]

[tool.poetry.scripts]
shipit_upload_product_details = "shipit_api.admin.cli:download_product_details"
shipit_rebuild_product_details = "shipit_api.admin.cli:rebuild_product_details"
shipit_import = "shipit_api.admin.cli:shipit_import"
shipit_trigger_product_details = "shipit_api.admin.cli:trigger_product_details"

[tool.poetry.dependencies]
# Required by both public and admin apps
python = "^3.9"
connexion = {version = "<3.0", extras = ["swagger-ui"]}
dockerflow = "*"
flask = "*"
flask_cors = "*"
flask_migrate = "*"
flask_talisman = "*"
mozilla-version = "*"
python-decouple = "*"
sentry-sdk = {version = "*", extras = ["flask"]}
slugid = "*"
sqlalchemy = "<=2.0.29"
# deployment
gunicorn = "*"
psycopg2 = "*"

# Required only by the admin app
aioamqp = "*"
aiohttp = {version = "*", extras = ["speedup"]}
arrow = "*"
backoff = "*"
# to support signals in Flask
blinker = "*"
deepmerge = "*"
flask_login = "*"
flask_oidc = "*"
json-e = "*"
kombu = "*"
mohawk = "*"
mypy = "*"
mypy_extensions = "*"
pyyaml = "*"
taskcluster = "*"

[tool.poetry.group.test.dependencies]
python = "^3.9"
aioresponses = "*"
responses = "*"
pytest = "*"
pytest-asyncio = "*"
pytest-cov = "*"
pytest-mock = "*"
black = "*"
check-manifest = "*"
isort = "*"
coverage = "*"
dpath = "*"
flake8 = "*"
openapi-spec-validator = "*"
oyaml = "*"

[tool.poetry.group.ccov-upload.dependencies]
requests = "*"

[tool.poetry.group.tox.dependencies]
tox = "*"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
