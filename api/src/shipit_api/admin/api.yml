---
servers:
- url: /
paths:
  /product-details:
    post:
      summary: Trigger a rebuild of product details
      operationId: shipit_api.admin.api.rebuild_product_details
      requestBody:
        description: Rebuild options
        content:
          application/json:
            schema:
              type: object
              properties:
                breakpoint_version:
                  type: integer
                clean_working_copy:
                  type: boolean
                channel:
                  type: string
                folder_in_repo:
                  type: string
        required: false
      responses:
        "200":
          description: Product details rebuild triggered.
          content: {}
        "405":
          description: Invalid input
          content: {}
  /releases:
    get:
      summary: List releases
      operationId: shipit_api.public.api.list_releases
      parameters:
      - name: product
        in: query
        schema:
          type: string
      - name: branch
        in: query
        schema:
          type: string
      - name: version
        in: query
        schema:
          type: string
      - name: build_number
        in: query
        schema:
          type: integer
      - name: status
        in: query
        style: form
        description: >
            Defaults to listing only "scheduled" releases. Currently supported
            values are "scheduled", "shipped", and "aborted".
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: A list of releases
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Release'
    post:
      summary: Add a new release
      operationId: shipit_api.admin.api.add_release
      requestBody:
        description: Release object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReleaseInput'
        required: true
      responses:
        "201":
          description: Release added
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Release'
        "405":
          description: Invalid input
          content: {}
  /releases/{name}:
    get:
      summary: Release info
      operationId: shipit_api.public.api.get_release
      parameters:
      - name: name
        in: path
        description: release name
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Returns release representation
          content:
            'application/json':
              schema:
                anyOf:
                  - $ref: '#/components/schemas/Release'
                  - $ref: '#/components/schemas/XPIRelease'
    delete:
      summary: Release info
      operationId: shipit_api.admin.api.abandon_release
      parameters:
      - name: name
        in: path
        description: release name
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Returns release representation
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Release'
    patch:
      summary: Update release status
      operationId: shipit_api.admin.api.update_release_status
      parameters:
      - name: name
        in: path
        description: release name
        required: true
        schema:
          type: string
      requestBody:
        description: Release status object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReleaseStatus'
        required: true
      responses:
        "200":
          description: Release updated
          content:
            'application/json':
              schema:
                anyOf:
                  - $ref: '#/components/schemas/Release'
                  - $ref: '#/components/schemas/XPIRelease'
        "405":
          description: Invalid input
          content: {}
  /releases/{name}/{phase}:
    get:
      summary: Release info
      operationId: shipit_api.public.api.get_phase
      parameters:
      - name: name
        in: path
        description: release name
        required: true
        schema:
          type: string
      - name: phase
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Retruns phase representation
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Phase'
    put:
      summary: Schedule phase
      operationId: shipit_api.admin.api.schedule_phase
      parameters:
      - name: name
        in: path
        description: release name
        required: true
        schema:
          type: string
      - name: phase
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Phase scheduled
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Phase'
        "409":
          description: Already submitted
          content: {}
  /signoff/{name}/{phase}:
    get:
      summary: Get phase signoff requirements and status
      operationId: shipit_api.public.api.get_phase_signoff
      parameters:
      - name: name
        in: path
        description: release name
        required: true
        schema:
          type: string
      - name: phase
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Retruns phase signoff representation
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Signoffs'
    put:
      summary: Sign off a phase
      operationId: shipit_api.admin.api.phase_signoff
      parameters:
      - name: name
        in: path
        description: release name
        required: true
        schema:
          type: string
      - name: phase
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: Signoff UID
        content:
          'application/json':
            schema:
              type: string
        required: true
      responses:
        "200":
          description: Retruns phase signoff representation
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Signoffs'
        "409":
          description: Already submitted
          content: {}
  /disabled-products:
    get:
      summary: Get the list of product/branches which are currently disabled. Disabled products/branches will not have automated releases created
      operationId: shipit_api.public.api.get_disabled_products
      responses:
        "200":
          description: Disabled product/branches
          content:
            application/json:
              schema:
                type: object
    post:
      summary: Disable a product+branch
      operationId: shipit_api.admin.api.disable_product
      requestBody:
        description: Disable Product object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisableProduct'
      responses:
        "200":
          description: OK
        "405":
          description: Invalid input
    delete:
      summary: Enable a product+branch
      operationId: shipit_api.admin.api.enable_product
      parameters:
      - name: product
        in: query
        required: true
        schema:
          type: string
          enum:
          - firefox
          - devedition
          - firefox-android
      - name: branch
        in: query
        required: true
        schema:
          type: string
          enum:
          - projects/maple
          - releases/mozilla-esr68
          - releases/mozilla-beta
          - try
          - ''
      responses:
        "200":
          description: OK
        "405":
          description: Invalid input
  /github/branches/{owner}/{repo}:
    get:
      summary: List git branches of a Github repo
      operationId: shipit_api.admin.github.list_github_branches
      parameters:
      - name: owner
        in: path
        required: true
        description: repo owner
        schema:
          type: string
      - name: repo
        in: path
        required: true
        description: repo name
        schema:
          type: string
      responses:
        "200":
          description: List of git branches
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /github/commits/{owner}/{repo}:
    get:
      summary: List git commits in a Github repo
      operationId: shipit_api.admin.github.list_github_commits
      parameters:
      - name: owner
        in: path
        required: true
        description: repo owner
        schema:
          type: string
      - name: repo
        in: path
        required: true
        description: repo name
        schema:
          type: string
      - name: branch
        in: query
        required: true
        description: branch name
        schema:
          type: string
      responses:
        "200":
          description: List of git commits
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /github/file/{owner}/{repo}/{ref}:
    get:
      summary: Returns contents of specified file from a github repo
      operationId: shipit_api.admin.github.get_file_from_github
      parameters:
      - name: owner
        in: path
        required: true
        description: repo owner
        schema:
          type: string
      - name: repo
        in: path
        required: true
        description: repo name
        schema:
          type: string
      - name: ref 
        in: path
        required: true
        description: commit revision or branch name
        schema:
          type: string
      - name: path
        in: query
        required: true
        description: file path
        schema:
          type: string
      responses:
        "200":
          description: Contents of specified file
          content:
            text/plain:
              schema:
                oneOf:
                  - type: number
                  - type: object
                  - type: string
  /github/xpis/{owner}/{repo}/{revision}:
    get:
      summary: List XPIs in the manifest
      operationId: shipit_api.admin.github.list_xpis
      parameters:
      - name: owner
        in: path
        required: true
        description: repo owner
        schema:
          type: string
      - name: repo
        in: path
        required: true
        description: repo name
        schema:
          type: string
      - name: revision
        required: true
        in: path
        description: commit revision
        schema:
          type: string
      responses:
        "200":
          description: List of XPIs in a manifest
          content:
            application/json:
              schema:
                type: object
  /xpi/releases:
    get:
      summary: List XPI releases
      operationId: shipit_api.admin.xpi.list_releases
      parameters:
      - name: xpi_name
        in: query
        schema:
          type: string
      - name: xpi_version
        in: query
        schema:
          type: string
      - name: build_number
        in: query
        schema:
          type: integer
      - name: status
        in: query
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: A list of releases
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/XPIRelease'
    post:
      summary: Add a new XPI release
      operationId: shipit_api.admin.xpi.add_release
      requestBody:
        description: XPI Release object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/XPIReleaseInput'
        required: true
      responses:
        "201":
          description: Release added
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/XPIRelease'
  /xpi/releases/{name}:
    get:
      summary: Release info
      operationId: shipit_api.admin.xpi.get_release
      parameters:
      - name: name
        in: path
        description: release name
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Returns release representation
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/XPIRelease'
    delete:
      summary: Release info
      operationId: shipit_api.admin.xpi.abandon_release_xpi
      parameters:
      - name: name
        in: path
        description: release name
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Returns release representation
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/XPIRelease'

  /xpi/releases/{name}/{phase}:
    get:
      summary: Phase info
      operationId: shipit_api.admin.xpi.get_phase
      parameters:
      - name: name
        in: path
        description: release name
        required: true
        schema:
          type: string
      - name: phase
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Retruns phase representation
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Phase'
    put:
      summary: Schedule phase
      operationId: shipit_api.admin.xpi.schedule_phase
      parameters:
      - name: name
        in: path
        description: release name
        required: true
        schema:
          type: string
      - name: phase
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Phase scheduled
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Phase'
        "409":
          description: Already submitted
          content: {}
  /xpi/signoff/{name}/{phase}:
    get:
      summary: Get phase signoff requirements and status
      operationId: shipit_api.admin.xpi.get_phase_signoff
      parameters:
      - name: name
        in: path
        description: release name
        required: true
        schema:
          type: string
      - name: phase
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Retruns phase signoff representation
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Signoffs'
    put:
      summary: Sign off a phase
      operationId: shipit_api.admin.xpi.phase_signoff
      parameters:
      - name: name
        in: path
        description: release name
        required: true
        schema:
          type: string
      - name: phase
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: Signoff UID
        content:
          'application/json':
            schema:
              type: string
        required: true
      responses:
        "200":
          description: Retruns phase signoff representation
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Signoffs'
        "409":
          description: Already submitted
          content: {}
  /versions/{product}/{channel}:
    get:
      summary: Get the current version for the given product channel
      operationId: shipit_api.admin.api.get_product_channel_version
      parameters:
      - name: product
        in: path
        description: product name
        required: true
        schema:
          type: string
      - name: channel
        in: path
        description: product channel
        required: true
        schema:
          type: string
      responses:
        "200":
          description: The current version for the given product channel
          content:
            text/plain:
              schema:
                type: string
                example: "127.0a1"
        "404":
          description: Product channel version not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "No version found for firefox release."
    post:
      summary: Create a new product channel version
      operationId: shipit_api.admin.api.create_product_channel_version
      parameters:
        - name: product
          in: path
          description: The product name for which the version is to be updated
          required: true
          schema:
            type: string
        - name: channel
          in: path
          description: product channel
          required: true
          schema:
            type: string
      requestBody:
        description: Initial version for a new product channel
        content:
          application/json:
            schema:
              type: object
              properties:
                version:
                  type: string
                  example: "128.0a1"
        required: true
      responses:
        "201":
          description: Product channel version created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "A firefox nightly version was created successfully."
                  version:
                    type: string
                    example: "128.0a1"
                  product:
                    type: string
                    example: "firefox"
                  channel:
                    type: string
                    example: "nightly"
        "409":
          description: Product channel version already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "A firefox nightly version already exists."
    put:
      summary: Update an existing product channel's version
      operationId: shipit_api.admin.api.update_product_channel_version
      parameters:
        - name: product
          in: path
          description: The product name for which the version is to be updated
          required: true
          schema:
            type: string
        - name: channel
          in: path
          description: product channel
          required: true
          schema:
            type: string
      requestBody:
        description: A valid version for the product channel
        content:
          application/json:
            schema:
              type: object
              properties:
                version:
                  type: string
                  example: "129.0a1"
        required: true
      responses:
        "200":
          description: Product version updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "The version for firefox nightly was updated successfully."
                  version:
                    type: string
                    example: "128.0a1"
                  product:
                    type: string
                    example: "firefox"
                  channel:
                    type: string
                    example: "nightly"
        "409":
          description: Product channel is already the given value
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "The firefox nightly version is already 128.0a1!"
        "404":
          description: Product channel version not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "No version found for firefox release."


components:
  schemas:
    ReleaseInput:
      required:
      - branch
      - build_number
      - product
      - revision
      - version
      type: object
      properties:
        product:
          $ref: '#/components/schemas/ProductInput'
        version:
          type: string
          example: 56.0b12
        branch:
          type: string
          example: projects/maple
        revision:
          type: string
          example: abcd1234
        build_number:
          type: integer
          example: 12
        release_eta:
          type: string
          format: dateTime
          example: "2017-12-21T15:10:00-05:00"
        partial_updates:
          anyOf:
            - type: object
              # Using additionalProperties allows having properties with names
              # unknown in advance, like versions used here.
              additionalProperties:
                type: object
                required:
                  - buildNumber
                  - locales
                additionalProperties: false
                properties:
                  buildNumber:
                    type: integer
                  locales:
                    type: array
                    items:
                      type: string
            - type: string
              enum: [auto]
        product_key:
          type: string
          example: fennec_beta
        repo_url:
          type: string
          example: https://github.com/mozilla-mobile/firefox-android
    ReleaseStatus:
      required:
      - status
      type: object
      properties:
        status:
          type: string
          example: scheduled
          enum:
          - scheduled
          - shipped
          - aborted
    Phase:
      required:
      - name
      - submitted
      type: object
      properties:
        name:
          type: string
          description: Release promotion phase name
          example: promote_firefox
        submitted:
          type: boolean
          description: Indicated if the phase was submitted to TC
        skipped:
          type: boolean
          description: Indicated if the phase was skipped
        actionTaskId:
          type: string
          description: Action Task ID for the phase. This is also the taskGroupId
            for the tasks created for this phase.
        created:
          type: string
          format: dateTime
          example: "2017-12-21T15:10:00-05:00"
        completed:
          type: string
          format: dateTime
          example: "2017-12-21T15:10:00-05:00"
    Release:
      required:
      - branch
      - build_number
      - name
      - phases
      - product
      - revision
      - status
      - version
      type: object
      properties:
        name:
          type: string
          example: firefox-69.0b1-build1
        product:
          $ref: '#/components/schemas/ProductOutput'
        version:
          type: string
          example: 56.0b12
        branch:
          type: string
          example: projects/maple
        project:
          type: string
          example: maple
        revision:
          type: string
          example: abcd1234
        build_number:
          type: integer
          example: 12
        release_eta:
          type: string
          format: dateTime
          example: "2017-12-21T15:10:00-05:00"
        status:
          type: string
          example: scheduled
          enum:
          - scheduled
          - shipped
          - aborted
        phases:
          type: array
          items:
            $ref: '#/components/schemas/Phase'
        created:
          type: string
          format: dateTime
          example: "2017-12-21T15:10:00-05:00"
        completed:
          type: string
          format: dateTime
          example: "2017-12-21T15:10:00-05:00"
        allow_phase_skipping:
          type: boolean
          description: Allow skipping phases. In this case the snowman release model will not skipped phases.
    Signoffs:
      required:
      - signoffs
      type: object
      properties:
        signoffs:
          type: array
          items:
            $ref: '#/components/schemas/Signoff'
        deadline:
          type: string
          description: Deadline of all signoffs
          format: datetime
    Signoff:
      required:
      - description
      - name
      - permissions
      - uid
      type: object
      properties:
        uid:
          type: string
          description: Unique identifier
        name:
          type: string
          description: Human readable signoff name
        description:
          type: string
          description: Human readable explanation of the signoff
        signed:
          type: boolean
          description: Is the signoff signed off
          default: false
        permissions:
          type: string
          description: Permision required to sign the signoff
        completed_by:
          type: string
          description: Person who signed off (Auth0 ID - email)
          default: ""
        completed:
          type: string
          description: Timestamp of the signoff
          format: datetime
    DisableProduct:
      type: object
      required:
      - product
      - branch
      properties:
        product:
          type: string
          example: firefox
          enum:
          - firefox
          - devedition
          - firefox-android
        branch:
          type: string
          example: releases/mozilla-beta
          enum:
          - projects/maple
          - releases/mozilla-beta
          - releases/mozilla-esr68
          - try
          - ''
    XPIReleaseInput:
      required:
      - xpi_name
      - xpi_revision
      - xpi_version
      - revision
      - build_number
      type: object
      properties:
        xpi_name:
          type: string
        xpi_revision:
          type: string
        xpi_version:
          type: string
        revision:
          type: string
          description: Manifest revision
        build_number:
          type: integer
    XPIRelease:
      type: object
      required:
        - xpi_name
        - xpi_revision
        - xpi_version
        - build_number
        - name
        - phases
        - status
        - revision
      properties:
        name:
          type: string
        xpi_name:
          type: string
        xpi_revision:
          type: string
        xpi_version:
          type: string
        revision:
          type: string
        build_number:
          type: integer
        status:
          type: string
          example: scheduled
          enum:
          - scheduled
          - shipped
          - aborted
        phases:
          type: array
          items:
            $ref: '#/components/schemas/Phase'
        created:
          type: string
          format: dateTime
        completed:
          type: string
          format: dateTime
