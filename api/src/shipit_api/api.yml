---
openapi: 3.0.1
info:
  title: Ship-It API
  description: |
    Find  out more about Ship-it at
    [https://github.com/mozilla-releng/ship-it](https://github.com/mozilla-releng/ship-it)
  license:
    name: MPL 2.0
    url: https://www.mozilla.org/MPL/2.0/
  version: 1.0.0
servers:
- url: /
paths:
  /product-details:
    post:
      summary: Trigger a rebuild of product details
      operationId: shipit_api.api.rebuild_product_details
      requestBody:
        description: Rebuild options
        x-body-name: options
        content:
          application/json:
            schema:
              type: object
              properties:
                breakpoint_version:
                  type: integer
                clean_working_copy:
                  type: boolean
                channel:
                  type: string
                folder_in_repo:
                  type: string
        required: false
      responses:
        200:
          description: Product details rebuild triggered.
          content: {}
        405:
          description: Invalid input
          content: {}
  /releases:
    get:
      summary: List releases
      operationId: shipit_api.api.list_releases
      parameters:
      - name: product
        in: query
        schema:
          type: string
      - name: branch
        in: query
        schema:
          type: string
      - name: version
        in: query
        schema:
          type: string
      - name: build_number
        in: query
        schema:
          type: integer
      - name: status
        in: query
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        200:
          description: A list of releases
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Release'
    post:
      summary: Add a new release
      operationId: shipit_api.api.add_release
      requestBody:
        description: Release object
        x-body-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReleaseInput'
        required: true
      responses:
        201:
          description: Release added
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Release'
        405:
          description: Invalid input
          content: {}
  /releases/{name}:
    get:
      summary: Release info
      operationId: shipit_api.api.get_release
      parameters:
      - name: name
        in: path
        description: release name
        required: true
        schema:
          type: string
      responses:
        200:
          description: Returns release representation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Release'
    delete:
      summary: Release info
      operationId: shipit_api.api.abandon_release
      parameters:
      - name: name
        in: path
        description: release name
        required: true
        schema:
          type: string
      responses:
        200:
          description: Returns release representation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Release'
    patch:
      summary: Update release status
      operationId: shipit_api.api.update_release_status
      parameters:
      - name: name
        in: path
        description: release name
        required: true
        schema:
          type: string
      requestBody:
        description: Release status object
        x-body-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReleaseStatus'
        required: true
      responses:
        200:
          description: Release updated
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Release'
        405:
          description: Invalid input
          content: {}
  /releases/{name}/{phase}:
    get:
      summary: Release info
      operationId: shipit_api.api.get_phase
      parameters:
      - name: name
        in: path
        description: release name
        required: true
        schema:
          type: string
      - name: phase
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: Retruns phase representation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Phase'
    put:
      summary: act on phase
      operationId: shipit_api.api.schedule_phase
      parameters:
      - name: name
        in: path
        description: release name
        required: true
        schema:
          type: string
      - name: phase
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: Phase scheduled
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Phase'
        409:
          description: Already submitted
          content: {}
  /signoff/{name}/{phase}:
    get:
      summary: Get phase signoff requirements and status
      operationId: shipit_api.api.get_phase_signoff
      parameters:
      - name: name
        in: path
        description: release name
        required: true
        schema:
          type: string
      - name: phase
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: Retruns phase signoff representation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Signoffs'
    put:
      summary: Sign off a phase
      operationId: shipit_api.api.phase_signoff
      parameters:
      - name: name
        in: path
        description: release name
        required: true
        schema:
          type: string
      - name: phase
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: Signoff UID
        x-body-name: uid
        content:
          '*/*':
            schema:
              type: string
        required: true
      responses:
        200:
          description: Retruns phase signoff representation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Signoffs'
        409:
          description: Already submitted
          content: {}
  /disabled-products:
    get:
      summary: Get the list of product/branches which are currently disabled. Disabled products/branches will not have automated releases created
      operationId: shipit_api.api.get_disabled_products
      responses:
        200:
          description: Disabled product/branches
          content:
            application/json:
              schema:
                type: object
    post:
      summary: Disable a product+branch
      operationId: shipit_api.api.disable_product
      requestBody:
        description: Disable Product object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisableProduct'
      responses:
        200:
          description: OK
        405:
          description: Invalid input
    delete:
      summary: Enable a product+branch
      operationId: shipit_api.api.enable_product
      parameters:
      - name: product
        in: query
        required: true
        schema:
          type: string
          enum:
          - firefox
          - devedition
      - name: branch
        in: query
        required: true
        schema:
          type: string
          enum:
          - releases/mozilla-beta
          - try
      responses:
        200:
          description: OK
        405:
          description: Invalid input
components:
  schemas:
    ReleaseInput:
      required:
      - branch
      - build_number
      - product
      - revision
      - version
      type: object
      properties:
        product:
          type: string
          example: firefox
          enum:
          - firefox
          - fennec
          - devedition
          - thunderbird
        version:
          type: string
          example: 56.0b12
        branch:
          type: string
          example: projects/maple
        revision:
          type: string
          example: abcd1234
        build_number:
          type: integer
          example: 12
        release_eta:
          type: string
          format: dateTime
          example: 2006-08-14T02:34:56-06:00
        partial_updates:
          anyOf:
            - type: object
              # Using additionalProperties allows having properties with names
              # unknown in advance, like versions used here.
              additionalProperties:
                type: object
                required:
                  - buildNumber
                  - locales
                additionalProperties: false
                properties:
                  buildNumber:
                    type: integer
                  locales:
                    type: array
                    items:
                      type: string
            - type: string
              enum: [auto]
        product_key:
          type: string
          example: fennec_beta
    ReleaseStatus:
      required:
      - status
      type: object
      properties:
        status:
          type: string
          example: scheduled
          enum:
          - scheduled
          - shipped
          - aborted
    Phase:
      required:
      - name
      - submitted
      type: object
      properties:
        name:
          type: string
          description: Release promotion phase name
          example: promote_firefox
        submitted:
          type: boolean
          description: Indicated if the phase was submitted to TC
        skipped:
          type: boolean
          description: Indicated if the phase was skipped
        actionTaskId:
          type: string
          description: Action Task ID for the phase. This is also the taskGroupId
            for the tasks created for this phase.
        started:
          type: string
          format: dateTime
          example: 2006-08-14T02:34:56-06:00
        completed:
          type: string
          format: dateTime
          example: 2006-08-14T02:34:56-06:00
    Release:
      required:
      - branch
      - build_number
      - name
      - phases
      - product
      - revision
      - status
      - version
      type: object
      properties:
        name:
          type: string
          example: firefox-69.0b1-build1
        product:
          type: string
          example: firefox
          enum:
          - firefox
          - fennec
          - devedition
          - thunderbird
        version:
          type: string
          example: 56.0b12
        branch:
          type: string
          example: projects/maple
        project:
          type: string
          example: maple
        revision:
          type: string
          example: abcd1234
        build_number:
          type: integer
          example: 12
        release_eta:
          type: string
          format: dateTime
          example: 2006-08-14T02:34:56-06:00
        status:
          type: string
          example: scheduled
          enum:
          - scheduled
          - shipped
          - aborted
        phases:
          type: array
          items:
            $ref: '#/components/schemas/Phase'
        started:
          type: string
          format: dateTime
          example: 2006-08-14T02:34:56-06:00
        completed:
          type: string
          format: dateTime
          example: 2006-08-14T02:34:56-06:00
        allow_phase_skipping:
          type: boolean
          description: Allow skipping phases. In this case the snowman release model will not skipped phases.
    Signoffs:
      required:
      - signoffs
      type: object
      properties:
        signoffs:
          type: array
          items:
            $ref: '#/components/schemas/Signoff'
        deadline:
          type: string
          description: Deadline of all signoffs
          format: datetime
    Signoff:
      required:
      - description
      - name
      - permissions
      - uid
      type: object
      properties:
        uid:
          type: string
          description: Unique identifier
        name:
          type: string
          description: Human readable signoff name
        description:
          type: string
          description: Human readable explpanation of the signogg
        signed:
          type: boolean
          description: Is the signoff signed off
          default: false
        permissions:
          type: string
          description: Permision required to sign the signoff
        completed_by:
          type: string
          description: Person who signed off (Auth0 ID)
          default: ""
        completed:
          type: string
          description: Timestamp of the signoff
          format: datetime
    DisableProduct:
      type: object
      required:
      - product
      - branch
      properties:
        product:
          type: string
          example: firefox
          enum:
          - firefox
          - devedition
        branch:
          type: string
          example: releases/mozilla-beta
          enum:
          - releases/mozilla-beta
          - try
